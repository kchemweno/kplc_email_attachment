/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.orpik.ui;

import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import javax.swing.JCheckBox;
import javax.swing.JTree;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeCellRenderer;
import javax.swing.tree.TreeModel;
import javax.swing.tree.TreeNode;
import org.orpik.core.Product;
//import org.orpik.core.Sales;
import org.orpik.helper.HelperSales;
import org.orpik.ui.tree.CheckTreeManager;

/**
 *
 * @author chemweno
 */
public class Sales extends javax.swing.JPanel {

    private DefaultTableModel tbmSales = new DefaultTableModel();
    private HelperSales helperSales = new HelperSales();
    private DefaultMutableTreeNode trnSales = new DefaultMutableTreeNode("Products");
    private DefaultTreeModel trmSales = new DefaultTreeModel(trnSales);
    private CheckTreeManager cht;// = new CheckTreeManager(null);
    private Product products = new Product();
    private org.orpik.core.Sales sales = new org.orpik.core.Sales();
    private Date dateFrom = null;
    private Date dateTo = null;

    /**
     * Creates new form Dips
     */
    public Sales() {
        initComponents();
        // Prepare table
        // prepareTable();
        // helperSales.prepareTree(treSalesProducts);        

        //setTreeNodeCellRenderer(treSalesProducts);
        cht = new CheckTreeManager(treSalesProducts);
        createNodes(trnSales);
    }
    /* tblDips = new javax.swing.JTable(tbmDips) {
     public Component prepareRenderer(TableCellRenderer renderer, int row, int
     col) { Component comp = super.prepareRenderer(renderer, row, col); 
     if(row%2==0) {
     //Set even numbered rows to yellow 238-232-170
     comp.setBackground(new java.awt.Color(224, 224, 255)); 
     } else {
     //Set odd numbered rows to purple 147-112-219
     comp.setBackground(new java.awt.Color(255, 255, 255)); 
     } return comp; 
     }
     
     public boolean isCellEditable(int row, int column) {
     //Disable editing on all rows of the table
     return false;	  
     } 
     };	
     */

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlDipsBottom = new javax.swing.JPanel();
        pnlDipsTop = new javax.swing.JPanel();
        pnlDipsTopTitle = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        pnlDipsMiddle = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSales = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        treSalesProducts = new javax.swing.JTree();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        dteSalesFrom = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        dteSalesTo = new com.toedter.calendar.JDateChooser();
        btnSalesView = new javax.swing.JButton();

        javax.swing.GroupLayout pnlDipsBottomLayout = new javax.swing.GroupLayout(pnlDipsBottom);
        pnlDipsBottom.setLayout(pnlDipsBottomLayout);
        pnlDipsBottomLayout.setHorizontalGroup(
            pnlDipsBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlDipsBottomLayout.setVerticalGroup(
            pnlDipsBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 16, Short.MAX_VALUE)
        );

        jLabel5.setFont(new java.awt.Font("Arial Unicode MS", 1, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Sales");

        javax.swing.GroupLayout pnlDipsTopTitleLayout = new javax.swing.GroupLayout(pnlDipsTopTitle);
        pnlDipsTopTitle.setLayout(pnlDipsTopTitleLayout);
        pnlDipsTopTitleLayout.setHorizontalGroup(
            pnlDipsTopTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDipsTopTitleLayout.createSequentialGroup()
                .addContainerGap(579, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(386, 386, 386))
        );
        pnlDipsTopTitleLayout.setVerticalGroup(
            pnlDipsTopTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDipsTopTitleLayout.createSequentialGroup()
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlDipsTopLayout = new javax.swing.GroupLayout(pnlDipsTop);
        pnlDipsTop.setLayout(pnlDipsTopLayout);
        pnlDipsTopLayout.setHorizontalGroup(
            pnlDipsTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlDipsTopTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlDipsTopLayout.setVerticalGroup(
            pnlDipsTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlDipsTopTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        tblSales.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        tblSales.setModel(tbmSales);
        tblSales.setGridColor(new java.awt.Color(0, 0, 255));
        tblSales.setRowHeight(20);
        tblSales.setSelectionForeground(new java.awt.Color(255, 0, 51));
        jScrollPane1.setViewportView(tblSales);

        javax.swing.GroupLayout pnlDipsMiddleLayout = new javax.swing.GroupLayout(pnlDipsMiddle);
        pnlDipsMiddle.setLayout(pnlDipsMiddleLayout);
        pnlDipsMiddleLayout.setHorizontalGroup(
            pnlDipsMiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        pnlDipsMiddleLayout.setVerticalGroup(
            pnlDipsMiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDipsMiddleLayout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addGap(0, 0, 0))
        );

        treSalesProducts.setFont(new java.awt.Font("Arial Unicode MS", 0, 12)); // NOI18N
        treSalesProducts.setModel(trmSales);
        jScrollPane2.setViewportView(treSalesProducts);

        jLabel1.setFont(new java.awt.Font("Arial Unicode MS", 0, 12)); // NOI18N
        jLabel1.setText("Products");

        jLabel3.setFont(new java.awt.Font("Arial Unicode MS", 0, 12)); // NOI18N
        jLabel3.setText("From");

        dteSalesFrom.setDateFormatString("dd-MM-yyyy");
        dteSalesFrom.setFont(new java.awt.Font("Arial Unicode MS", 0, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Arial Unicode MS", 0, 12)); // NOI18N
        jLabel4.setText("To");

        dteSalesTo.setDateFormatString("dd-MM-yyyy");
        dteSalesTo.setFont(new java.awt.Font("Arial Unicode MS", 0, 12)); // NOI18N

        btnSalesView.setFont(new java.awt.Font("Arial Unicode MS", 0, 12)); // NOI18N
        btnSalesView.setMnemonic('V');
        btnSalesView.setText("View");
        btnSalesView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalesViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlDipsBottom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dteSalesTo, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dteSalesFrom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSalesView, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDipsMiddle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pnlDipsTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {dteSalesFrom, dteSalesTo});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlDipsTop, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dteSalesFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dteSalesTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSalesView)
                        .addGap(30, 30, 30))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlDipsMiddle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(6, 6, 6)))
                .addComponent(pnlDipsBottom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {dteSalesFrom, dteSalesTo});

    }// </editor-fold>//GEN-END:initComponents

    //Create tree nodes
    private void createNodes(DefaultMutableTreeNode topNode) {
        try {
            int categoryIndex = -1;
            DefaultMutableTreeNode category = null;
            DefaultMutableTreeNode product = null;
            HashMap<String, String> productCategories = new HashMap<>();
            productCategories = products.getProductCategoriesList();
            Iterator<String> iterator;
            String productName = "";
            String categoryName = "";
            
            iterator = productCategories.keySet().iterator();
            while(iterator.hasNext()){
                productName = iterator.next();
                categoryName = productCategories.get(productName);
                product = new DefaultMutableTreeNode(productName);
                category = new DefaultMutableTreeNode(categoryName);
                if (!helperSales.isNodeInTree(topNode, category)) {
                    //category = new DefaultMutableTreeNode(categoryName);
                    category.add(product);
                    topNode.add(category);
                } else {
                    //Get category for adding this node
                    categoryIndex = helperSales.getNodeIndex(topNode, category);                    
                   //category = new DefaultMutableTreeNode(categoryName);
                    category = (DefaultMutableTreeNode) topNode.getChildAt(categoryIndex);
                    category.add(product);
                }
                
            }
        } catch (Exception exception) {
            exception.printStackTrace();
        }
    }

    public void prepareTable() {
        try {
            helperSales.prepareTable(tbmSales, tblSales, "Date", "Product", "Volume", "Staff", "Total Sales (KSh)");
        } catch (Exception exception) {
            exception.printStackTrace();
        }
    }
    private void btnSalesViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalesViewActionPerformed
        // View sales with filters applied
      //  Date dateFrom = null;
      //  Date dateTo = null;
        int rowIndex =  0;
        String formattedDateTo = "";
        String formattedDateFrom = "";
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyy-MM-dd");
        ArrayList<org.orpik.core.Sales> salesList = new ArrayList<>();
        ArrayList<TreeNode> treeNodesList = new ArrayList<>();
        String productNames = "";
        try {
          //  dateFrom = dteSalesFrom.getDate();
          //  dateTo = dteSalesTo.getDate();
             formattedDateTo = dteSalesTo.getDate() != null ? dateFormat.format(dteSalesTo.getDate()) : "2090-12-01" ;
             formattedDateFrom = dteSalesFrom.getDate() != null ? dateFormat.format(dteSalesFrom.getDate()) : "1980-01-01";
            //Get products names
            productNames = helperSales.getSelectedProducts(trnSales, treeNodesList).toString().replace("[", "'").replace("]", "'").replace(", ", "','");
            
            //Remove any existing rows from table
            tbmSales.setRowCount(0);
            // Populate sales
            salesList = sales.getSales(formattedDateFrom, formattedDateTo, productNames);
            for(org.orpik.core.Sales sale : salesList){
                //Insert row in table
                tbmSales.addRow(new Object[]{null});
                //Add values to table
                tblSales.setValueAt(sale.getDateTime(), rowIndex, 0);
                tblSales.setValueAt(sale.getProductName(), rowIndex, 1);
                tblSales.setValueAt(sale.getProductQuantity(), rowIndex, 2);
                tblSales.setValueAt(sale.getStaffName(), rowIndex, 3);
                tblSales.setValueAt(sale.getSalesAmount(), rowIndex, 4);
                rowIndex++;
            }
            
        } catch (Exception exception) {
            exception.printStackTrace();
        }
    }//GEN-LAST:event_btnSalesViewActionPerformed

    //Set tree nodes to be checkboxes
    private void setTreeNodeCellRenderer(JTree tree) {
        try {
            tree.setCellRenderer(new TreeCellRenderer() {
                @Override
                public Component getTreeCellRendererComponent(JTree tree, Object value,
                        boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {
                    JCheckBox checkBox = new JCheckBox(value.toString());
                    return checkBox;
                }
            });
        } catch (Exception exception) {
            exception.printStackTrace();
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalesView;
    private com.toedter.calendar.JDateChooser dteSalesFrom;
    private com.toedter.calendar.JDateChooser dteSalesTo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pnlDipsBottom;
    private javax.swing.JPanel pnlDipsMiddle;
    private javax.swing.JPanel pnlDipsTop;
    private javax.swing.JPanel pnlDipsTopTitle;
    private javax.swing.JTable tblSales;
    private javax.swing.JTree treSalesProducts;
    // End of variables declaration//GEN-END:variables
}
