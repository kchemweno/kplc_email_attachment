/*
 * To change this template, choose Tools | Templates and open the template in
 * the editor.
 */
package org.orpik.ui;

import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import org.orpik.access.control.Login;
import org.orpik.help.UserGuide;
import org.orpik.modular.ManageUser;
import org.orpik.settings.global.GuiManager;
import org.orpik.settings.global.Interface;
import org.orpik.settings.global.ScreenGeometry;

/**
 *
 * @author Chemweno
 */
public class MainFrame extends javax.swing.JFrame {

    private static Interface onInterface = new Interface();
    private ScreenGeometry centerComponent = new ScreenGeometry();
    private ManageUserUi manageUserUi = new ManageUserUi();
    private ManageCommoditiesUi manageIndicatorsUi = new ManageCommoditiesUi();    
    private ManageUser manageUser = new ManageUser();
    private ManageMarketsUi manageMarketsUi = new ManageMarketsUi();
    private GuiManager guiManager = new GuiManager();
    private DataEntryUi dataEntryInterface = new DataEntryUi(this, true);
    private DataCleaningUi dataCleaningUi = new DataCleaningUi(this, true);
    private MarketAnalysisUi marketAnalysisUi = new MarketAnalysisUi(this, true);
    private DataImportUi dataImportUi = new DataImportUi(this, true);
    private DataExportUi dataExportUi = new DataExportUi(this, true);
    private UserGuide userGuide = new UserGuide();
    private int width = 10000;//100;
    private int height = 6000;//504;
    private int widthChangePasswordDialog = 430;
    private int heightChangePasswordDialog = 200;    

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        try{
        initComponents();
        // Show icon image
        setIconImage(ImageIO.read(getClass().getResource("/org/orpik/images/fids.png")));
        //Set resizability
        this.setResizable(true);
        //Set default close operation
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        //Set size
        setFramePreferredSize();
        guiManager.setFrameSize(this, width, height);
        //Set maximum size
        //setMaximumFrameSize();
        guiManager.setFrameMaximumSize(this);
        //Center frame on screen
        guiManager.centerFrame(this, width, height);
        //Hide some menus
        mnuLanguage.setVisible(false);
        //mniExportToCSV.setVisible(false);
        //mniExportToCSV.setVisible(false);
        //mniExportToCSV.setVisible(false);
        lblStatusBarUser.setVisible(false);
        btnLogout.setVisible(false);
        btnManageUsers.setVisible(false);
        btnMainFrameChangePassword.setVisible(false);
        mnuManage.setVisible(false);
       // this.setIconImage(Toolkit.getDefaultToolkit().getImage("images//DNA.png"));
        }catch(IOException ioException){
            ioException.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dlgAboutFids = new javax.swing.JDialog();
        pnlAboutFids = new javax.swing.JPanel();
        pnlAboutFidsTop = new javax.swing.JPanel();
        lblAboutFidsIcon = new javax.swing.JLabel();
        pnlAboutFidsBottom = new javax.swing.JPanel();
        btnAboutFidsDismiss = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        mnuOther = new javax.swing.JMenu();
        mniOtherSub = new javax.swing.JMenuItem();
        dlgChangePassword = new javax.swing.JDialog();
        pnlResetPasswordMain = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        btnChangePassword = new javax.swing.JButton();
        btnResetPasswordCancel = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        pwdChangePasswordNewPassword = new javax.swing.JPasswordField();
        pwdChangePasswordRetypeNewPassword = new javax.swing.JPasswordField();
        jLabel25 = new javax.swing.JLabel();
        txtChangePasswordUsername = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        lblMainFrameMatchPassword = new javax.swing.JLabel();
        pwdChangePasswordPassword = new javax.swing.JPasswordField();
        tlbMainFrame = new javax.swing.JToolBar();
        btnDataEntry = new javax.swing.JButton();
        btnDataCleaning = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btnAnalysis = new javax.swing.JButton();
        btnManageUsers = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        btnMainFrameChangePassword = new javax.swing.JButton();
        stbMainFrameStatusBar = new javax.swing.JPanel();
        lblStatusBarUser = new javax.swing.JLabel();
        tbpMainFrame = new javax.swing.JTabbedPane();
        mnbMainFrame = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mniLogout = new javax.swing.JMenuItem();
        mniExit = new javax.swing.JMenuItem();
        mnuDataEntry = new javax.swing.JMenu();
        mniMarkets = new javax.swing.JMenuItem();
        mniSlimPartOne = new javax.swing.JMenuItem();
        mniSlimPartTwo = new javax.swing.JMenuItem();
        mnuDataCleaning = new javax.swing.JMenu();
        mniDataCleaningMarket = new javax.swing.JMenuItem();
        mniDataCleaningSlimPartOne = new javax.swing.JMenuItem();
        mniDataCleaningSlimPartTwo = new javax.swing.JMenuItem();
        mnuMonthlyAnalysis = new javax.swing.JMenu();
        mniMarketAnalysis = new javax.swing.JMenuItem();
        mniTot = new javax.swing.JMenuItem();
        mniMarketUpdate = new javax.swing.JMenuItem();
        mnuDataImport = new javax.swing.JMenu();
        mniImportDataManually = new javax.swing.JMenuItem();
        mnuDataExport = new javax.swing.JMenu();
        mniExportToExcel = new javax.swing.JMenuItem();
        mnuManage = new javax.swing.JMenu();
        mniManageUsers = new javax.swing.JMenuItem();
        mniManageIndicators = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        mnuLanguage = new javax.swing.JMenu();
        mniLanguageEnglish = new javax.swing.JMenuItem();
        mniLanguageSomali = new javax.swing.JMenuItem();
        mniLanguageKiswahili = new javax.swing.JMenuItem();
        mniLanguageFrancais = new javax.swing.JMenuItem();
        mnuHelp = new javax.swing.JMenu();
        mniHelpContents = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        dlgAboutFids.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        dlgAboutFids.setAlwaysOnTop(true);
        dlgAboutFids.setMinimumSize(new java.awt.Dimension(447, 332));
        dlgAboutFids.setResizable(false);

        pnlAboutFids.setPreferredSize(new java.awt.Dimension(556, 195));

        lblAboutFidsIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/orpik/images/market_commodity.png"))); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/orpik/ui/Bundle"); // NOI18N
        lblAboutFidsIcon.setText(bundle.getString("MainFrame.lblAboutFidsIcon.text")); // NOI18N

        javax.swing.GroupLayout pnlAboutFidsTopLayout = new javax.swing.GroupLayout(pnlAboutFidsTop);
        pnlAboutFidsTop.setLayout(pnlAboutFidsTopLayout);
        pnlAboutFidsTopLayout.setHorizontalGroup(
            pnlAboutFidsTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAboutFidsTopLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblAboutFidsIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(483, 483, 483))
        );
        pnlAboutFidsTopLayout.setVerticalGroup(
            pnlAboutFidsTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblAboutFidsIcon, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        btnAboutFidsDismiss.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N
        btnAboutFidsDismiss.setMnemonic('C');
        btnAboutFidsDismiss.setText(bundle.getString("MainFrame.btnAboutFidsDismiss.text")); // NOI18N
        btnAboutFidsDismiss.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAboutFidsDismissActionPerformed(evt);
            }
        });

        jScrollPane1.setMinimumSize(new java.awt.Dimension(108, 787));
        jScrollPane1.setName(""); // NOI18N

        jEditorPane1.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N
        jEditorPane1.setText(bundle.getString("MainFrame.jEditorPane1.text")); // NOI18N
        jEditorPane1.setToolTipText(bundle.getString("MainFrame.jEditorPane1.toolTipText")); // NOI18N
        jEditorPane1.setMaximumSize(new java.awt.Dimension(109, 690));
        jScrollPane1.setViewportView(jEditorPane1);

        javax.swing.GroupLayout pnlAboutFidsBottomLayout = new javax.swing.GroupLayout(pnlAboutFidsBottom);
        pnlAboutFidsBottom.setLayout(pnlAboutFidsBottomLayout);
        pnlAboutFidsBottomLayout.setHorizontalGroup(
            pnlAboutFidsBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAboutFidsBottomLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAboutFidsDismiss)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        pnlAboutFidsBottomLayout.setVerticalGroup(
            pnlAboutFidsBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAboutFidsBottomLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(btnAboutFidsDismiss)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlAboutFidsLayout = new javax.swing.GroupLayout(pnlAboutFids);
        pnlAboutFids.setLayout(pnlAboutFidsLayout);
        pnlAboutFidsLayout.setHorizontalGroup(
            pnlAboutFidsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAboutFidsLayout.createSequentialGroup()
                .addComponent(pnlAboutFidsTop, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 24, Short.MAX_VALUE))
            .addComponent(pnlAboutFidsBottom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlAboutFidsLayout.setVerticalGroup(
            pnlAboutFidsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAboutFidsLayout.createSequentialGroup()
                .addComponent(pnlAboutFidsTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlAboutFidsBottom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout dlgAboutFidsLayout = new javax.swing.GroupLayout(dlgAboutFids.getContentPane());
        dlgAboutFids.getContentPane().setLayout(dlgAboutFidsLayout);
        dlgAboutFidsLayout.setHorizontalGroup(
            dlgAboutFidsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAboutFids, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        dlgAboutFidsLayout.setVerticalGroup(
            dlgAboutFidsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAboutFids, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        mnuOther.setText(bundle.getString("MainFrame.mnuOther.text")); // NOI18N

        mniOtherSub.setText(bundle.getString("MainFrame.mniOtherSub.text")); // NOI18N

        dlgChangePassword.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        dlgChangePassword.setTitle(bundle.getString("MainFrame.dlgChangePassword.title")); // NOI18N
        dlgChangePassword.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        dlgChangePassword.setResizable(false);

        jLabel23.setText(bundle.getString("MainFrame.jLabel23.text")); // NOI18N

        btnChangePassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/orpik/images/Refresh_16x16.png"))); // NOI18N
        btnChangePassword.setMnemonic('P');
        btnChangePassword.setText(bundle.getString("MainFrame.btnChangePassword.text")); // NOI18N
        btnChangePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangePasswordActionPerformed(evt);
            }
        });

        btnResetPasswordCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/orpik/images/Cancel_16x16.png"))); // NOI18N
        btnResetPasswordCancel.setMnemonic('C');
        btnResetPasswordCancel.setText(bundle.getString("MainFrame.btnResetPasswordCancel.text")); // NOI18N
        btnResetPasswordCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetPasswordCancelActionPerformed(evt);
            }
        });

        jLabel24.setText(bundle.getString("MainFrame.jLabel24.text")); // NOI18N

        pwdChangePasswordRetypeNewPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pwdChangePasswordRetypeNewPasswordKeyReleased(evt);
            }
        });

        jLabel25.setText(bundle.getString("MainFrame.jLabel25.text")); // NOI18N

        txtChangePasswordUsername.setEditable(false);

        jLabel26.setText(bundle.getString("MainFrame.jLabel26.text")); // NOI18N

        lblMainFrameMatchPassword.setText(bundle.getString("MainFrame.lblMainFrameMatchPassword.text")); // NOI18N

        javax.swing.GroupLayout pnlResetPasswordMainLayout = new javax.swing.GroupLayout(pnlResetPasswordMain);
        pnlResetPasswordMain.setLayout(pnlResetPasswordMainLayout);
        pnlResetPasswordMainLayout.setHorizontalGroup(
            pnlResetPasswordMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlResetPasswordMainLayout.createSequentialGroup()
                .addGroup(pnlResetPasswordMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlResetPasswordMainLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlResetPasswordMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlResetPasswordMainLayout.createSequentialGroup()
                                .addComponent(btnChangePassword)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnResetPasswordCancel))
                            .addComponent(pwdChangePasswordRetypeNewPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)))
                    .addGroup(pnlResetPasswordMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(pnlResetPasswordMainLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(pwdChangePasswordNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlResetPasswordMainLayout.createSequentialGroup()
                            .addGap(48, 48, 48)
                            .addGroup(pnlResetPasswordMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel25)
                                .addComponent(jLabel26)
                                .addComponent(jLabel23))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(pnlResetPasswordMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtChangePasswordUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                                .addComponent(pwdChangePasswordPassword)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(lblMainFrameMatchPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        pnlResetPasswordMainLayout.setVerticalGroup(
            pnlResetPasswordMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlResetPasswordMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlResetPasswordMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(txtChangePasswordUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlResetPasswordMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(pwdChangePasswordPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(pnlResetPasswordMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(pwdChangePasswordNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlResetPasswordMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMainFrameMatchPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlResetPasswordMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel24)
                        .addComponent(pwdChangePasswordRetypeNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlResetPasswordMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnChangePassword)
                    .addComponent(btnResetPasswordCancel))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout dlgChangePasswordLayout = new javax.swing.GroupLayout(dlgChangePassword.getContentPane());
        dlgChangePassword.getContentPane().setLayout(dlgChangePasswordLayout);
        dlgChangePasswordLayout.setHorizontalGroup(
            dlgChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlResetPasswordMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        dlgChangePasswordLayout.setVerticalGroup(
            dlgChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlResetPasswordMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(bundle.getString("MainFrame.title")); // NOI18N

        tlbMainFrame.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 255), 1, true));
        tlbMainFrame.setRollover(true);

        btnDataEntry.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/orpik/images/data_entry.png"))); // NOI18N
        btnDataEntry.setText(bundle.getString("MainFrame.btnDataEntry.text")); // NOI18N
        btnDataEntry.setToolTipText(bundle.getString("MainFrame.btnDataEntry.toolTipText")); // NOI18N
        btnDataEntry.setFocusable(false);
        btnDataEntry.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDataEntry.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDataEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDataEntryActionPerformed(evt);
            }
        });
        tlbMainFrame.add(btnDataEntry);

        btnDataCleaning.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/orpik/images/filter_cleaning.png"))); // NOI18N
        btnDataCleaning.setText(bundle.getString("MainFrame.btnDataCleaning.text")); // NOI18N
        btnDataCleaning.setToolTipText(bundle.getString("MainFrame.btnDataCleaning.toolTipText")); // NOI18N
        btnDataCleaning.setFocusable(false);
        btnDataCleaning.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDataCleaning.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDataCleaning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDataCleaningActionPerformed(evt);
            }
        });
        tlbMainFrame.add(btnDataCleaning);
        tlbMainFrame.add(jSeparator1);

        btnAnalysis.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/orpik/images/analysis.png"))); // NOI18N
        btnAnalysis.setText(bundle.getString("MainFrame.btnAnalysis.text")); // NOI18N
        btnAnalysis.setToolTipText(bundle.getString("MainFrame.btnAnalysis.toolTipText")); // NOI18N
        btnAnalysis.setFocusable(false);
        btnAnalysis.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAnalysis.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAnalysis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalysisActionPerformed(evt);
            }
        });
        tlbMainFrame.add(btnAnalysis);

        btnManageUsers.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/orpik/images/User_32x32.png"))); // NOI18N
        btnManageUsers.setText(bundle.getString("MainFrame.btnManageUsers.text")); // NOI18N
        btnManageUsers.setToolTipText(bundle.getString("MainFrame.btnManageUsers.toolTipText")); // NOI18N
        btnManageUsers.setFocusable(false);
        btnManageUsers.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnManageUsers.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnManageUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageUsersActionPerformed(evt);
            }
        });
        tlbMainFrame.add(btnManageUsers);

        btnLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/orpik/images/Log Out_32x32.png"))); // NOI18N
        btnLogout.setText(bundle.getString("MainFrame.btnLogout.text")); // NOI18N
        btnLogout.setToolTipText(bundle.getString("MainFrame.btnLogout.toolTipText")); // NOI18N
        btnLogout.setFocusable(false);
        btnLogout.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLogout.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });
        tlbMainFrame.add(btnLogout);

        btnMainFrameChangePassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/orpik/images/Refresh_32x32.png"))); // NOI18N
        btnMainFrameChangePassword.setText(bundle.getString("MainFrame.btnMainFrameChangePassword.text")); // NOI18N
        btnMainFrameChangePassword.setToolTipText(bundle.getString("MainFrame.btnMainFrameChangePassword.toolTipText")); // NOI18N
        btnMainFrameChangePassword.setFocusable(false);
        btnMainFrameChangePassword.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnMainFrameChangePassword.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnMainFrameChangePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMainFrameChangePasswordActionPerformed(evt);
            }
        });
        tlbMainFrame.add(btnMainFrameChangePassword);

        stbMainFrameStatusBar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        lblStatusBarUser.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        lblStatusBarUser.setText(bundle.getString("MainFrame.lblStatusBarUser.text")); // NOI18N

        javax.swing.GroupLayout stbMainFrameStatusBarLayout = new javax.swing.GroupLayout(stbMainFrameStatusBar);
        stbMainFrameStatusBar.setLayout(stbMainFrameStatusBarLayout);
        stbMainFrameStatusBarLayout.setHorizontalGroup(
            stbMainFrameStatusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stbMainFrameStatusBarLayout.createSequentialGroup()
                .addComponent(lblStatusBarUser)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        stbMainFrameStatusBarLayout.setVerticalGroup(
            stbMainFrameStatusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, stbMainFrameStatusBarLayout.createSequentialGroup()
                .addGap(0, 11, Short.MAX_VALUE)
                .addComponent(lblStatusBarUser))
        );

        tbpMainFrame.setFont(new java.awt.Font("Arial Unicode MS", 1, 15)); // NOI18N

        jMenu1.setText(bundle.getString("MainFrame.jMenu1.text")); // NOI18N

        mniLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/orpik/images/Log Out_24x24.png"))); // NOI18N
        mniLogout.setText(bundle.getString("MainFrame.mniLogout.text")); // NOI18N
        mniLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniLogoutActionPerformed(evt);
            }
        });
        jMenu1.add(mniLogout);

        mniExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        mniExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/orpik/images/exit.png"))); // NOI18N
        mniExit.setText(bundle.getString("MainFrame.mniExit.text")); // NOI18N
        mniExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniExitActionPerformed(evt);
            }
        });
        jMenu1.add(mniExit);

        mnbMainFrame.add(jMenu1);

        mnuDataEntry.setText(bundle.getString("MainFrame.mnuDataEntry.text")); // NOI18N

        mniMarkets.setText(bundle.getString("MainFrame.mniMarkets.text")); // NOI18N
        mniMarkets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniMarketsActionPerformed(evt);
            }
        });
        mnuDataEntry.add(mniMarkets);

        mniSlimPartOne.setText(bundle.getString("MainFrame.mniSlimPartOne.text")); // NOI18N
        mniSlimPartOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniSlimPartOneActionPerformed(evt);
            }
        });
        mnuDataEntry.add(mniSlimPartOne);

        mniSlimPartTwo.setText(bundle.getString("MainFrame.mniSlimPartTwo.text")); // NOI18N
        mniSlimPartTwo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniSlimPartTwoActionPerformed(evt);
            }
        });
        mnuDataEntry.add(mniSlimPartTwo);

        mnbMainFrame.add(mnuDataEntry);

        mnuDataCleaning.setText(bundle.getString("MainFrame.mnuDataCleaning.text")); // NOI18N

        mniDataCleaningMarket.setText(bundle.getString("MainFrame.mniDataCleaningMarket.text")); // NOI18N
        mniDataCleaningMarket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniDataCleaningMarketActionPerformed(evt);
            }
        });
        mnuDataCleaning.add(mniDataCleaningMarket);

        mniDataCleaningSlimPartOne.setText(bundle.getString("MainFrame.mniDataCleaningSlimPartOne.text")); // NOI18N
        mniDataCleaningSlimPartOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniDataCleaningSlimPartOneActionPerformed(evt);
            }
        });
        mnuDataCleaning.add(mniDataCleaningSlimPartOne);

        mniDataCleaningSlimPartTwo.setText(bundle.getString("MainFrame.mniDataCleaningSlimPartTwo.text")); // NOI18N
        mniDataCleaningSlimPartTwo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniDataCleaningSlimPartTwoActionPerformed(evt);
            }
        });
        mnuDataCleaning.add(mniDataCleaningSlimPartTwo);

        mnbMainFrame.add(mnuDataCleaning);

        mnuMonthlyAnalysis.setText(bundle.getString("MainFrame.mnuMonthlyAnalysis.text")); // NOI18N

        mniMarketAnalysis.setText(bundle.getString("MainFrame.mniMarketAnalysis.text")); // NOI18N
        mniMarketAnalysis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniMarketAnalysisActionPerformed(evt);
            }
        });
        mnuMonthlyAnalysis.add(mniMarketAnalysis);

        mniTot.setText(bundle.getString("MainFrame.mniTot.text")); // NOI18N
        mniTot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniTotActionPerformed(evt);
            }
        });
        mnuMonthlyAnalysis.add(mniTot);

        mniMarketUpdate.setText(bundle.getString("MainFrame.mniMarketUpdate.text")); // NOI18N
        mniMarketUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniMarketUpdateActionPerformed(evt);
            }
        });
        mnuMonthlyAnalysis.add(mniMarketUpdate);

        mnbMainFrame.add(mnuMonthlyAnalysis);

        mnuDataImport.setText(bundle.getString("MainFrame.mnuDataImport.text")); // NOI18N

        mniImportDataManually.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/orpik/images/Download_32x32.png"))); // NOI18N
        mniImportDataManually.setText(bundle.getString("MainFrame.mniImportDataManually.text")); // NOI18N
        mniImportDataManually.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniImportDataManuallyActionPerformed(evt);
            }
        });
        mnuDataImport.add(mniImportDataManually);

        mnbMainFrame.add(mnuDataImport);

        mnuDataExport.setText(bundle.getString("MainFrame.mnuDataExport.text")); // NOI18N

        mniExportToExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/orpik/images/excel.png"))); // NOI18N
        mniExportToExcel.setText(bundle.getString("MainFrame.mniExportToExcel.text")); // NOI18N
        mniExportToExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniExportToExcelActionPerformed(evt);
            }
        });
        mnuDataExport.add(mniExportToExcel);

        mnbMainFrame.add(mnuDataExport);

        mnuManage.setText(bundle.getString("MainFrame.mnuManage.text")); // NOI18N

        mniManageUsers.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/orpik/images/User_16x16.png"))); // NOI18N
        mniManageUsers.setText(bundle.getString("MainFrame.mniManageUsers.text")); // NOI18N
        mniManageUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniManageUsersActionPerformed(evt);
            }
        });
        mnuManage.add(mniManageUsers);

        mniManageIndicators.setText(bundle.getString("MainFrame.mniManageIndicators.text")); // NOI18N
        mniManageIndicators.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniManageIndicatorsActionPerformed(evt);
            }
        });
        mnuManage.add(mniManageIndicators);

        jMenuItem3.setText(bundle.getString("MainFrame.jMenuItem3.text")); // NOI18N
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        mnuManage.add(jMenuItem3);

        mnbMainFrame.add(mnuManage);

        mnuLanguage.setText(bundle.getString("MainFrame.mnuLanguage.text")); // NOI18N

        mniLanguageEnglish.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        mniLanguageEnglish.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/orpik/images/british-flag2.png"))); // NOI18N
        mniLanguageEnglish.setMnemonic('E');
        mniLanguageEnglish.setText(bundle.getString("MainFrame.mniLanguageEnglish.text")); // NOI18N
        mnuLanguage.add(mniLanguageEnglish);

        mniLanguageSomali.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        mniLanguageSomali.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/orpik/images/somalia-flag2.png"))); // NOI18N
        mniLanguageSomali.setMnemonic('S');
        mniLanguageSomali.setText(bundle.getString("MainFrame.mniLanguageSomali.text")); // NOI18N
        mnuLanguage.add(mniLanguageSomali);

        mniLanguageKiswahili.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_K, java.awt.event.InputEvent.CTRL_MASK));
        mniLanguageKiswahili.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/orpik/images/kenyan-flag2.png"))); // NOI18N
        mniLanguageKiswahili.setMnemonic('K');
        mniLanguageKiswahili.setText(bundle.getString("MainFrame.mniLanguageKiswahili.text")); // NOI18N
        mnuLanguage.add(mniLanguageKiswahili);

        mniLanguageFrancais.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        mniLanguageFrancais.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/orpik/images/french-flag2.png"))); // NOI18N
        mniLanguageFrancais.setMnemonic('F');
        mniLanguageFrancais.setText(bundle.getString("MainFrame.mniLanguageFrancais.text")); // NOI18N
        mnuLanguage.add(mniLanguageFrancais);

        mnbMainFrame.add(mnuLanguage);

        mnuHelp.setText(bundle.getString("MainFrame.mnuHelp.text")); // NOI18N

        mniHelpContents.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        mniHelpContents.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/orpik/images/help.png"))); // NOI18N
        mniHelpContents.setText(bundle.getString("MainFrame.mniHelpContents.text")); // NOI18N
        mniHelpContents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniHelpContentsActionPerformed(evt);
            }
        });
        mnuHelp.add(mniHelpContents);

        jMenuItem1.setText(bundle.getString("MainFrame.jMenuItem1.text")); // NOI18N
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        mnuHelp.add(jMenuItem1);

        mnbMainFrame.add(mnuHelp);

        setJMenuBar(mnbMainFrame);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tlbMainFrame, javax.swing.GroupLayout.DEFAULT_SIZE, 1097, Short.MAX_VALUE)
            .addComponent(stbMainFrameStatusBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tbpMainFrame)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tlbMainFrame, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tbpMainFrame, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stbMainFrameStatusBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAboutFidsDismissActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAboutFidsDismissActionPerformed
        //dismiss about dialog         dlgAboutFids.dispose();     }//GEN-LAST:event_btnAboutFidsDismissActionPerformed
        dlgAboutFids.dispose();
    }
    private void mniMarketsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniMarketsActionPerformed
        //Add markets panel to data entry tabbed pane
        /*
         * ataEntryInterface.tbpDataEntry.add("Markets Data Entry"
         * ,dataEntryInterface.pnlDataEntryMarkets);
         */
        //Set markets data entry tab as selected 
        dataEntryInterface.tbpDataEntry.setSelectedComponent(dataEntryInterface.pnlDataEntryMarkets);
        // Show Data Entry window on screen
        dataEntryInterface.setVisible(true);
        //Add Data Entry to main frame tabbed pane
        tbpMainFrame.add("Data Entry", dataEntryInterface.tbpDataEntry);
        //Set current component as selected
        tbpMainFrame.setSelectedComponent(dataEntryInterface.tbpDataEntry);             
    }//GEN-LAST:event_mniMarketsActionPerformed

    private void mniExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniExitActionPerformed
        // Allow user to conmfirm whether they want to exit
        int result = JOptionPane.showConfirmDialog(this, "Are you sure you want to exit?", "Exit?", JOptionPane.YES_NO_OPTION);
        if (result <= 0) {
            this.dispose();
        }
    }//GEN-LAST:event_mniExitActionPerformed

    private void mniSlimPartTwoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniSlimPartTwoActionPerformed
        //Add slims part 2 panel to data entry tabbed pane        
        /*
         * dataEntryInterface.tbpDataEntry.add("SLIMS Part 2 Data Entry" ,dataEntryInterface.pnlDataEntrySlimsPart2);
         */
        //Set slims part 2 data entry tab as selected 
        tbpMainFrame.add("Data Entry", dataEntryInterface.tbpDataEntry);
        dataEntryInterface.tbpDataEntry.setSelectedComponent(dataEntryInterface.pnlDataEntrySlimsPart2);
        //Show Data Entry window on screen        
        dataEntryInterface.setVisible(true);
        //Set current component as selected
        tbpMainFrame.setSelectedComponent(dataEntryInterface.tbpDataEntry);             
    }//GEN-LAST:event_mniSlimPartTwoActionPerformed

    private void mniSlimPartOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniSlimPartOneActionPerformed
        //Add slims part 1 panel to data entry tabbed pane        
        /*
         * dataEntryInterface.tbpDataEntry.add("SLIMS Part 1 Data Entry" ,dataEntryInterface.pnlDataEntrySlimsPart1);
         */
        //Set slims part 1 data entry tab as selected 
        tbpMainFrame.add("Data Entry", dataEntryInterface.tbpDataEntry);
        dataEntryInterface.tbpDataEntry.setSelectedComponent(dataEntryInterface.pnlDataEntrySlimsPart1);
        //Show Data Entry window on screen        
        dataEntryInterface.setVisible(true);
        //Set current component as selected
        tbpMainFrame.setSelectedComponent(dataEntryInterface.tbpDataEntry);         

    }//GEN-LAST:event_mniSlimPartOneActionPerformed

    private void mniDataCleaningMarketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniDataCleaningMarketActionPerformed
        //Add markets panel to data cleaning tabbed pane
        /*
         * dataCleaningUi.tbpDataCleaning.add("Markets Data Cleaning"
         * dataCleaningUi.pnlDataCleaningMarkets);
         */
        tbpMainFrame.add("Data Cleaning", dataCleaningUi.tbpDataCleaning);
        //Set markets data cleaning tab as selected 
        dataCleaningUi.tbpDataCleaning.setSelectedComponent(dataCleaningUi.pnlDataCleaningMarkets);
        // Show Data Cleaning window on screen
        dataCleaningUi.setVisible(true);
        //Set current component as selected
        tbpMainFrame.setSelectedComponent(dataCleaningUi.tbpDataCleaning);         
    }//GEN-LAST:event_mniDataCleaningMarketActionPerformed

    private void mniDataCleaningSlimPartOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniDataCleaningSlimPartOneActionPerformed
        //Add slims part 1 panel to data cleaning tabbed pane
        /*
         * dataCleaningUi.tbpDataCleaning.add("SLIMS Part 1 Data Cleaning"
         * ,dataCleaningUi.pnlDataCleaningSlimsPart1);
         */
        tbpMainFrame.add("Data Cleaning", dataCleaningUi.tbpDataCleaning);
        //Set slims part 1 data cleaning tab as selected 
        dataCleaningUi.tbpDataCleaning.setSelectedComponent(dataCleaningUi.pnlDataCleaningSlimsPart1);
        // Show Data Cleaning window on screen
        dataCleaningUi.setVisible(true);
        //Set current component as selected
        tbpMainFrame.setSelectedComponent(dataCleaningUi.tbpDataCleaning);        
    }//GEN-LAST:event_mniDataCleaningSlimPartOneActionPerformed

    private void mniDataCleaningSlimPartTwoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniDataCleaningSlimPartTwoActionPerformed
        //Add slims part 2 panel to data cleaning tabbed pane
        /*
         * dataCleaningUi.tbpDataCleaning.add("SLIMS Part 2 Data Cleaning"
         * ,dataCleaningUi.pnlDataCleaningSlimsPart2);
         */
        tbpMainFrame.add("Data Cleaning", dataCleaningUi.tbpDataCleaning);
        //Set slims part 2 data cleaning tab as selected 
        dataCleaningUi.tbpDataCleaning.setSelectedComponent(dataCleaningUi.pnlDataCleaningSlimsPart2);
        // Show Data Cleaning window on screen
        dataCleaningUi.setVisible(true);
        //Set current component as selected
        tbpMainFrame.setSelectedComponent(dataCleaningUi.tbpDataCleaning);
    }//GEN-LAST:event_mniDataCleaningSlimPartTwoActionPerformed

    private void mniMarketAnalysisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniMarketAnalysisActionPerformed
        //Add monthly analysis panel to market analysis tabbed pane
        /*marketAnalysisUi.tbpMarketAnalysis.add("Monthly Analysis", marketAnalysisUi.pnlMarketAnalaysisMonthly);*/
        tbpMainFrame.add("Market Analysis", marketAnalysisUi.tbpMarketAnalysis);
        //Set monthly analysis tab as selected 
        marketAnalysisUi.tbpMarketAnalysis.setSelectedComponent(marketAnalysisUi.pnlMarketAnalaysisMonthly);
        //Show Market Analysis window on screen
        marketAnalysisUi.setVisible(true);
        //Set current component as selected
        tbpMainFrame.setSelectedComponent(marketAnalysisUi.tbpMarketAnalysis);        
    }//GEN-LAST:event_mniMarketAnalysisActionPerformed

    private void mniTotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniTotActionPerformed
        //Add tot panel to market analysis tabbed pane
        /*marketAnalysisUi.tbpMarketAnalysis.add("Terms Of Trade (TOT)", marketAnalysisUi.pnlMarketAnalaysisTot);*/
        tbpMainFrame.add("Market Analysis", marketAnalysisUi.tbpMarketAnalysis);
        //Set terms of trade tab as selected 
        marketAnalysisUi.tbpMarketAnalysis.setSelectedComponent(marketAnalysisUi.pnlMarketAnalaysisTot);
        //Show Terms of Trade window on screen
        marketAnalysisUi.setVisible(true);
        //Set current component as selected
        tbpMainFrame.setSelectedComponent(marketAnalysisUi.tbpMarketAnalysis);
    }//GEN-LAST:event_mniTotActionPerformed

    private void mniMarketUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniMarketUpdateActionPerformed
        //Add market update panel to market analysis tabbed pane
        /*marketAnalysisUi.tbpMarketAnalysis.add("Market Update", marketAnalysisUi.pnlMarketAnalysisMarketUpdate);*/
        tbpMainFrame.add("Market Analysis", marketAnalysisUi.tbpMarketAnalysis);
        //Set market update tab as selected 
        marketAnalysisUi.tbpMarketAnalysis.setSelectedComponent(marketAnalysisUi.pnlMarketAnalysisMarketUpdate);
        //Show Market Update window on screen
        marketAnalysisUi.setVisible(true);
        //Set current component as selected
        tbpMainFrame.setSelectedComponent(marketAnalysisUi.tbpMarketAnalysis);
    }//GEN-LAST:event_mniMarketUpdateActionPerformed

    private void mniImportDataManuallyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniImportDataManuallyActionPerformed
        //Launch data import dialog
        dataImportUi.setVisible(true);
    }//GEN-LAST:event_mniImportDataManuallyActionPerformed

    private void mniExportToExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniExportToExcelActionPerformed
        // Show export data dialog
        dataExportUi.setVisible(true);
    }//GEN-LAST:event_mniExportToExcelActionPerformed

    private void btnAnalysisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalysisActionPerformed
         tbpMainFrame.add("Market Analysis", marketAnalysisUi.tbpMarketAnalysis);
        //Set monthly analysis tab as selected 
        marketAnalysisUi.tbpMarketAnalysis.setSelectedComponent(marketAnalysisUi.pnlMarketAnalaysisMonthly);
        //Show Market Analysis window on screen
        marketAnalysisUi.setVisible(true);
        //Set current component as selected
        tbpMainFrame.setSelectedComponent(marketAnalysisUi.tbpMarketAnalysis);
    }//GEN-LAST:event_btnAnalysisActionPerformed

    private void btnDataCleaningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDataCleaningActionPerformed
        tbpMainFrame.add("Data Cleaning", dataCleaningUi.tbpDataCleaning);
        //Set markets data cleaning tab as selected 
        dataCleaningUi.tbpDataCleaning.setSelectedComponent(dataCleaningUi.pnlDataCleaningMarkets);
        // Show Data Cleaning window on screen
        dataCleaningUi.setVisible(true);
        //Set current component as selected
        tbpMainFrame.setSelectedComponent(dataCleaningUi.tbpDataCleaning);
    }//GEN-LAST:event_btnDataCleaningActionPerformed

    private void btnDataEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDataEntryActionPerformed
           // Show Data Entry window on screen
        dataEntryInterface.setVisible(true);
        //Add Data Entry to main frame tabbed pane
        tbpMainFrame.add("Data Entry", dataEntryInterface.tbpDataEntry);
        //Set selected component
        dataEntryInterface.tbpDataEntry.setSelectedComponent(dataEntryInterface.pnlDataEntryMarkets);
        //Set current component as selected
        tbpMainFrame.setSelectedComponent(dataEntryInterface.tbpDataEntry);
    }//GEN-LAST:event_btnDataEntryActionPerformed

    private void mniManageUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniManageUsersActionPerformed
        // Add manage users panel to main tabbed pane
         tbpMainFrame.add("Manage Users", manageUserUi.pnlManageUsersMain);
        // Set manage users as selected component in main tabbed pane
         tbpMainFrame.setSelectedComponent(manageUserUi.pnlManageUsersMain);            
         
    }//GEN-LAST:event_mniManageUsersActionPerformed

    private void btnManageUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageUsersActionPerformed
        // Add manage users panel to main tabbed pane
         tbpMainFrame.add("Manage Users", manageUserUi.pnlManageUsersMain);
        // Set manage users as selected component in main tabbed pane
         tbpMainFrame.setSelectedComponent(manageUserUi.pnlManageUsersMain);         
    }//GEN-LAST:event_btnManageUsersActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // Logout
        this.dispose();
        Login.main(null);        
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnMainFrameChangePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMainFrameChangePasswordActionPerformed
        // Change password
        int result = 0;
        int userId = 0;
        char[] passwordchar = {};
        String password = "";
        
        passwordchar = pwdChangePasswordPassword.getPassword();
        password = new String(passwordchar);
        userId = manageUser.getUserId(txtChangePasswordUsername.getText());
        result = manageUser.changePassword(password, userId);

        //Load username
        txtChangePasswordUsername.setText(Login.userName);        
        manageUser.launchDialog(dlgChangePassword, widthChangePasswordDialog, heightChangePasswordDialog);      
    }//GEN-LAST:event_btnMainFrameChangePasswordActionPerformed

    private void btnChangePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangePasswordActionPerformed
        // Change password
        String username = "";
        String password = "";
        char[] passwordChar = {};
        int userId = 0;
        int result = 0;
        passwordChar = pwdChangePasswordNewPassword.getPassword();
        password = new String(passwordChar);
        username = Login.userName;
        
        userId = manageUser.getUserId(username);
        result = manageUser.resetPassword(userId, password);
        if (result > 0) {
            JOptionPane.showMessageDialog(null, "Password changed successfully", "Password Reset", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Password changing failed.\nPlease seek assistance from system administrator",
                    "Password Reset", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnChangePasswordActionPerformed

    private void btnResetPasswordCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetPasswordCancelActionPerformed
        // Dispose reset password dialog
        dlgChangePassword.dispose();
    }//GEN-LAST:event_btnResetPasswordCancelActionPerformed

    private void pwdChangePasswordRetypeNewPasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pwdChangePasswordRetypeNewPasswordKeyReleased
        // Check passwords for match
        boolean isMatched = false;
        isMatched = manageUser.passwordsMatch(pwdChangePasswordNewPassword, pwdChangePasswordRetypeNewPassword);
        if (isMatched) {
            lblMainFrameMatchPassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/orpik/images/Check_16x16.png")));
        } else {
            lblMainFrameMatchPassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/orpik/images/Cancel_16x16.png")));
        }
    }//GEN-LAST:event_pwdChangePasswordRetypeNewPasswordKeyReleased

    private void mniLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniLogoutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mniLogoutActionPerformed

    private void mniManageIndicatorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniManageIndicatorsActionPerformed
        // Add manage indicators panel to main tabbed pane
         tbpMainFrame.add("Manage Indicators", manageIndicatorsUi.pnlManageCommoditiesMain);
        // Set manage indicators as selected component in main tabbed pane
         tbpMainFrame.setSelectedComponent(manageIndicatorsUi.pnlManageCommoditiesMain);   
    }//GEN-LAST:event_mniManageIndicatorsActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // Add manage markets panel to main tabbed pane
         tbpMainFrame.add("Manage Markets", manageMarketsUi.pnlManageMarketsMain);
        // Set manage markets as selected component in main tabbed pane
         tbpMainFrame.setSelectedComponent(manageMarketsUi.pnlManageMarketsMain); 
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void mniHelpContentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniHelpContentsActionPerformed
        if (userGuide == null) {
            userGuide = new UserGuide();
            userGuide.setVisible(true);
            //logManager.logInfo("Help documentation opened using button");
        } else if (userGuide.isActive()) {
            userGuide.setVisible(true);
        } else {
            userGuide.setState(javax.swing.JFrame.NORMAL);
            userGuide.setVisible(true);
            // logManager.logInfo("Help documentation restored using button");
        }
    }//GEN-LAST:event_mniHelpContentsActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // Launch About dialog
        dlgAboutFids.setVisible(true);
        dlgAboutFids.setLocationRelativeTo(null);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                //if ("Nimbus".equals(info.getName())) {

                if (onInterface.getLookAndFeel().equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAboutFidsDismiss;
    private javax.swing.JButton btnAnalysis;
    private javax.swing.JButton btnChangePassword;
    private javax.swing.JButton btnDataCleaning;
    private javax.swing.JButton btnDataEntry;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnMainFrameChangePassword;
    private javax.swing.JButton btnManageUsers;
    private javax.swing.JButton btnResetPasswordCancel;
    private javax.swing.JDialog dlgAboutFids;
    private javax.swing.JDialog dlgChangePassword;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JLabel lblAboutFidsIcon;
    private javax.swing.JLabel lblMainFrameMatchPassword;
    public javax.swing.JLabel lblStatusBarUser;
    private javax.swing.JMenuBar mnbMainFrame;
    private javax.swing.JMenuItem mniDataCleaningMarket;
    private javax.swing.JMenuItem mniDataCleaningSlimPartOne;
    private javax.swing.JMenuItem mniDataCleaningSlimPartTwo;
    private javax.swing.JMenuItem mniExit;
    private javax.swing.JMenuItem mniExportToExcel;
    private javax.swing.JMenuItem mniHelpContents;
    private javax.swing.JMenuItem mniImportDataManually;
    private javax.swing.JMenuItem mniLanguageEnglish;
    private javax.swing.JMenuItem mniLanguageFrancais;
    private javax.swing.JMenuItem mniLanguageKiswahili;
    private javax.swing.JMenuItem mniLanguageSomali;
    private javax.swing.JMenuItem mniLogout;
    private javax.swing.JMenuItem mniManageIndicators;
    private javax.swing.JMenuItem mniManageUsers;
    private javax.swing.JMenuItem mniMarketAnalysis;
    private javax.swing.JMenuItem mniMarketUpdate;
    private javax.swing.JMenuItem mniMarkets;
    private javax.swing.JMenuItem mniOtherSub;
    private javax.swing.JMenuItem mniSlimPartOne;
    private javax.swing.JMenuItem mniSlimPartTwo;
    private javax.swing.JMenuItem mniTot;
    private javax.swing.JMenu mnuDataCleaning;
    private javax.swing.JMenu mnuDataEntry;
    private javax.swing.JMenu mnuDataExport;
    private javax.swing.JMenu mnuDataImport;
    private javax.swing.JMenu mnuHelp;
    private javax.swing.JMenu mnuLanguage;
    private javax.swing.JMenu mnuManage;
    private javax.swing.JMenu mnuMonthlyAnalysis;
    private javax.swing.JMenu mnuOther;
    private javax.swing.JPanel pnlAboutFids;
    private javax.swing.JPanel pnlAboutFidsBottom;
    private javax.swing.JPanel pnlAboutFidsTop;
    private javax.swing.JPanel pnlResetPasswordMain;
    private javax.swing.JPasswordField pwdChangePasswordNewPassword;
    private javax.swing.JPasswordField pwdChangePasswordPassword;
    private javax.swing.JPasswordField pwdChangePasswordRetypeNewPassword;
    private javax.swing.JPanel stbMainFrameStatusBar;
    private javax.swing.JTabbedPane tbpMainFrame;
    private javax.swing.JToolBar tlbMainFrame;
    private javax.swing.JTextField txtChangePasswordUsername;
    // End of variables declaration//GEN-END:variables
//Manage settings of frame
//    private void centerFrame() {
//        int xLocation = 0;
//        int yLocation = 0;
//        //Determine window x location
//        xLocation = (centerComponent.getScreenCoordinate().x - width) / 2;
//        //Determine window y location
//        yLocation = (centerComponent.getScreenCoordinate().y - height) / 2;
//        //Set frame on x,y location
//        this.setLocation(xLocation, yLocation);
//    }

    //This method sets the default size of the frame
    private void setFramePreferredSize() {
        int screenWidth = 0;
        int screenHeight = 0;
        //If width and height are greater than the screen size, set these values to the screen width and screen height
        screenWidth = onInterface.getScreenSize().width;
        screenHeight = onInterface.getScreenSize().height;
        if (width > screenWidth) {
            width = screenWidth - 5;
        }
        if (height > screenHeight) {
            height = screenHeight - 75;
        }
        this.setSize(width, height);
    }
    //This method sets the maximum size possible for the frame
//    private void setMaximumFrameSize(){
//        try{
//            this.setMaximumSize(onInterface.getScreenSize());
//        }catch(Exception exception){}
//    }
}
