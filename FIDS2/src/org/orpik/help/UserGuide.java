/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * UserGuide.java
 *
 * Created on May 7, 2010, 9:35:48 AM
 */

package org.orpik.help;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.URL;
import java.util.Properties;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.event.HyperlinkEvent;

/**
 *
 * @author SYSTEM
 */
public class UserGuide extends javax.swing.JFrame {

    private URL pageUrl;
    private String helpFilename = "help.htm";
    //private String helpFilename = "help1.mht";
    private String path = "";
    /** Creates new form UserGuide */
    public UserGuide() {

        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            initComponents();
            //Center the frame on tblDataEntrySlimsPart2MiddleMidthe screen
            Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
            //calculate frame location
            int width = (screenSize.width - this.getWidth()) / 2;
            int height = (screenSize.height - this.getHeight()) / 2;
            //position the frame at center of screen
            this.setLocation(width, height);
            //Set the icon image of the application
            //this.setIconImage(Toolkit.getDefaultToolkit().getImage("images//DNA.png"));
            //==============================================
             path = new File(".").getCanonicalPath();
            File helpFile = null;//new File(path + "\\doc\\" + helpFilename);
           // http://en.wikipedia.org/wiki/Main_Page
           

               // String help = helpFile.toString();

                //URL helpUrl = new URL("file", "localhost", help);
                URL helpUrl = ClassLoader.getSystemResource("help.htm");
                pageUrl = helpUrl;
                setPageURL("FIDS User Guide",  pageUrl);
   
            //==============================================
            //Set page URL
           // pageUrl = ClassLoader.getSystemResource("help.html");
            //JOptionPane.showMessageDialog(this, "help file location\n"+pageUrl,"",JOptionPane.INFORMATION_MESSAGE);
            //setPageURL("FIDS User Guide",  pageUrl);
        } catch (UnsupportedLookAndFeelException uslfEx) {
            System.err.println("Unsupported Look and Feel:" + uslfEx.getMessage());
        } catch (ClassNotFoundException cnfEx) {
            System.err.println("Class Not Found:" + cnfEx.getMessage());
        } catch (InstantiationException iEx) {
            System.err.println("Instantiation:" + iEx.getMessage() + ":Details:" + iEx.toString());
        } catch (IllegalAccessException iAEx) {
            System.err.println("Illegal Access:" + iAEx.getMessage() + ":Details:" + iAEx.toString());
        } catch (NullPointerException nullPointerException) {
            System.err.println("General Error:" + nullPointerException.getMessage() + ":Details:" + nullPointerException.toString());
        }catch (FileNotFoundException fileNotFoundException) {
            JOptionPane.showMessageDialog(null, "Help file not found. \nError deatils:\n"+
                    fileNotFoundException.getMessage(),"File Not Found", JOptionPane.ERROR_MESSAGE);
            fileNotFoundException.printStackTrace();
        }catch (IOException ioException) {
            JOptionPane.showMessageDialog(null, "Error reading help file. \nError deatils:\n"+
                    ioException.getMessage(),"Input/Output Error", JOptionPane.ERROR_MESSAGE);
            ioException.printStackTrace();
        }
    }
    private void setPageURL(String title, URL url){
        pageUrl = url;
        epHelpViewer.setEditable(false);        
        try{
            epHelpViewer.setPage(url);
        }catch(Exception exception){
            exception.printStackTrace();
            System.err.println("General error occurred setting page URL to help view area");
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlUserGuideMain = new javax.swing.JPanel();
        pnlUserGuideBottom = new javax.swing.JPanel();
        btnUserGuideClose = new javax.swing.JButton();
        pnlUserGuideTop = new javax.swing.JPanel();
        scpUserGuide = new javax.swing.JScrollPane();
        epHelpViewer = new javax.swing.JEditorPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(153, 204, 255));

        pnlUserGuideMain.setBackground(new java.awt.Color(153, 204, 255));

        pnlUserGuideBottom.setBackground(new java.awt.Color(153, 204, 255));

        btnUserGuideClose.setBackground(new java.awt.Color(153, 204, 255));
        btnUserGuideClose.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnUserGuideClose.setMnemonic('C');
        btnUserGuideClose.setText("Close");
        btnUserGuideClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUserGuideCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlUserGuideBottomLayout = new javax.swing.GroupLayout(pnlUserGuideBottom);
        pnlUserGuideBottom.setLayout(pnlUserGuideBottomLayout);
        pnlUserGuideBottomLayout.setHorizontalGroup(
            pnlUserGuideBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlUserGuideBottomLayout.createSequentialGroup()
                .addContainerGap(484, Short.MAX_VALUE)
                .addComponent(btnUserGuideClose, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(464, 464, 464))
        );
        pnlUserGuideBottomLayout.setVerticalGroup(
            pnlUserGuideBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUserGuideBottomLayout.createSequentialGroup()
                .addComponent(btnUserGuideClose)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlUserGuideTop.setBackground(new java.awt.Color(153, 204, 255));

        scpUserGuide.setBackground(new java.awt.Color(153, 204, 255));

        epHelpViewer.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        epHelpViewer.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        epHelpViewer.addHyperlinkListener(new javax.swing.event.HyperlinkListener() {
            public void hyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {
                epHelpViewerHyperlinkUpdate(evt);
            }
        });
        scpUserGuide.setViewportView(epHelpViewer);

        javax.swing.GroupLayout pnlUserGuideTopLayout = new javax.swing.GroupLayout(pnlUserGuideTop);
        pnlUserGuideTop.setLayout(pnlUserGuideTopLayout);
        pnlUserGuideTopLayout.setHorizontalGroup(
            pnlUserGuideTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scpUserGuide, javax.swing.GroupLayout.DEFAULT_SIZE, 1059, Short.MAX_VALUE)
        );
        pnlUserGuideTopLayout.setVerticalGroup(
            pnlUserGuideTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scpUserGuide, javax.swing.GroupLayout.DEFAULT_SIZE, 654, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlUserGuideMainLayout = new javax.swing.GroupLayout(pnlUserGuideMain);
        pnlUserGuideMain.setLayout(pnlUserGuideMainLayout);
        pnlUserGuideMainLayout.setHorizontalGroup(
            pnlUserGuideMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlUserGuideBottom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlUserGuideTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlUserGuideMainLayout.setVerticalGroup(
            pnlUserGuideMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlUserGuideMainLayout.createSequentialGroup()
                .addComponent(pnlUserGuideTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlUserGuideBottom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlUserGuideMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlUserGuideMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void epHelpViewerHyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {//GEN-FIRST:event_epHelpViewerHyperlinkUpdate
        // TODO add your handling code here:
        try{
        if(evt.getEventType()==HyperlinkEvent.EventType.ACTIVATED){
            epHelpViewer.setPage(evt.getURL());
        }
        }catch(IOException ioException){
            ioException.printStackTrace();
            System.err.println("IO error occurred opening user guide documentation");
        }catch(Exception exception){
            exception.printStackTrace();
            System.err.println("General error occurred opening user guide documentation");
        }
    }//GEN-LAST:event_epHelpViewerHyperlinkUpdate

    private void btnUserGuideCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUserGuideCloseActionPerformed
        //Close help viewer
        this.dispose();
    }//GEN-LAST:event_btnUserGuideCloseActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserGuide().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUserGuideClose;
    private javax.swing.JEditorPane epHelpViewer;
    private javax.swing.JPanel pnlUserGuideBottom;
    private javax.swing.JPanel pnlUserGuideMain;
    private javax.swing.JPanel pnlUserGuideTop;
    private javax.swing.JScrollPane scpUserGuide;
    // End of variables declaration//GEN-END:variables

}
